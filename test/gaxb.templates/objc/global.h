<%
-- Copyright (c) 2012 Small Planet Digital, LLC
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files 
-- (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, 
-- publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, 
-- subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
-- FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-- WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 %>
<%
FULL_NAME_CAPS = "_"..string.upper(this.namespace).."_XMLLOADER_"
FULL_NAME_CAMEL = capitalizedString(this.namespace)
%>//
// Autogenerated by gaxb at <%= os.date("%I:%M:%S %p on %x") %>
//

<%
	-- includes for other header files
	for k,v in pairs(schema.elements) do
		-- only include defintions from this schema's namespace
		if (schema.namespace == v.namespace) then
			gaxb_print("#import \""..className(v)..".h\"\n")
		end
	end
	
	for k,v in pairs(schema.simpleTypes) do
		-- only include defintions from this schema's namespace
		if (schema.namespace == v.namespace) then
			gaxb_print("\n#import \""..this.namespace.."_XMLConstants.h\"\n");
			break;
		end
	end

%>
@interface <%= FULL_NAME_CAMEL %>_XMLLoader : NSObject 
{
	NSMutableArray *element_stack;
	NSString *last_element_name;
	NSMutableString *scratch_string;
	NSMutableDictionary *attribute_map;
	NSMutableDictionary *plural_element_map;
	id parent;
	int uid;
	BOOL memLite;
}

@property (nonatomic, retain) NSMutableArray * element_stack;

+ (id) readFromFile:(NSString *)path;
+ (id) readFromData:(NSData *)data;
+ (id) readFromData:(NSData *)data withParent:(id)parent;
+ (id) readFromString:(NSString *)xml_string;
+ (id) readFromFileFast:(NSString *)path;
+ (id) readFromDataFast:(NSData *)data;
+ (id) readFromStringFast:(NSString *)xml_string;
+ (void) useTBXML:(BOOL)b;
+ (void) write:(id)object toFile:(NSString *)path;
+ (NSData *) writeToData:(id)object;
+ (NSString *) writeToString:(id)object;
- (id) initWithParent:(id)p AndMemoryLite:(BOOL)m;
<%
for k,v in pairs(schema.simpleTypes) do
	-- only include defintions from this schema's namespace
	if (schema.namespace == v.namespace) then
		gaxb_print("+ (NSArray *) arrayForEnum"..v.name..";\n");
	end			
end
%>
@end
